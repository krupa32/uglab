Exercise 1
----------

Create a file qsort.c with the following function.

    void qsort(int *arr, int size);

The function should do a QUICK SORT of array 'arr'. 'size' is the total
number of elements in the array. Note that the sorted sequence is also stored
in the same array 'arr'.

You can compile using 'make qsort' and test using 'make test_qsort'.


Exercise 2
----------

Create a file heap.c with the following functions.

    void insert(int *heap, int size, int val);
    int remove_min(int *heap, int size);

The 'insert' should insert 'val' into the min heap 'heap'. Size of the heap
is passed in the 'size'. Note that after insert, the 'heap' array should
maintain the heap property.

The 'remove_min' should remove the minimum element from the min heap 
(ie, heap[0]) and return it. It should also adjust the heap elements
such that the heap property is maintained.

You can test using 'make test_heap'.


Exercise 3
----------

*** YOU HAVE TO COMPLETE EXERCISE 2 BEFORE PROCEEDING ***

Add the following function to heap.c.

    void heapsort(int *arr, int size);

The function should use the insert and remove_min functions defined
in the previous exercise to do a heap sort of the array 'arr' with
'size' elements.

You can test using 'make test_heapsort'.

